name: Build Qt Project

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2019, ubuntu-latest, macos-latest]
    steps:
      - uses: actions/checkout@v3

      # Установка Qt на Windows
      - name: Установка Qt на Windows
        if: runner.os == 'Windows'
        uses: jurplel/install-qt-action@v2
        with:
          version: '6.5.1'
          host: 'windows'
          arch: 'win64_msvc2019_64'
          modules: 'qtbase'

      - name: Установка зависимостей на Linux
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake qt6-base-dev qt6-base-dev-tools qt6-declarative-dev

      - name: Настройка PATH для Qt на Linux (GHEnv)
        if: runner.os == 'Linux'
        run: echo "/usr/lib/qt6/bin" >> $GITHUB_PATH

      - name: Установка зависимостей на macOS
        if: runner.os == 'macOS'
        run: |
          brew update
          brew install cmake qt

      - name: Настройка PATH для Qt на macOS
        if: runner.os == 'macOS'
        run: echo "$(brew --prefix qt)/bin" >> $GITHUB_PATH

      - name: Сборка проекта на Windows
        if: runner.os == 'Windows'
        run: |
          mkdir build
          cd build
          cmake -G "Visual Studio 16 2019" -A x64 -DCMAKE_PREFIX_PATH="%Qt6_DIR%" ..
          cmake --build . --config Release

      - name: Сборка проекта на Linux и macOS
        if: runner.os != 'Windows'
        run: |
          mkdir build
          cd build
          cmake ..
          cmake --build . --config Release --fresh

      # Выгрузка артефактов
      - name: Выгрузка артефактов
        uses: actions/upload-artifact@v3
        with:
          name: build-${{ matrix.os }}
          path: build/
